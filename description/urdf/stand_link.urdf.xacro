<?xml version="1.0"?>
<robot name="stand_link" xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- Includes -->
    <xacro:include filename="$(find description)/urdf/constants.xacro"/>
    <xacro:include filename="$(find description)/urdf/inertias.xacro"/>

    <!-- Stand link; this is a dummy link that is used to make camera placement and other sensors on the stand more convenient -->
    <!-- Stand link definition. Note: purposely left blank -->
    <link name="stand_link"/>

    <joint name="stand_link_joint" type="fixed">
        <parent link="chassis_link"/>
        <child link="stand_link"/>
        <origin xyz="0 0 ${chassis_to_stand_link_dist}" rpy="0 0 0" />
    </joint>

    <!-- GPS -->
    <link name="gps_link">
        <inertial>
            <mass value="${gps_mass}"/>
            <xacro:cylinder_inertia mass="${gps_mass}" length="${gps_length}" radius="${gps_diam / 2.0}"/>
        </inertial>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${gps_length}" radius="${gps_diam / 2.0}"/>
            </geometry>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${gps_length}" radius="${gps_diam / 2.0}"/>
            </geometry>
        </collision>
    </link>

    <joint name="gps_joint" type="fixed">
        <parent link="stand_link"/>
        <child link="gps_link"/>
        <origin xyz="0 0 ${(gps_length + phidget_height) / 2.0}" rpy="0 0 0"/>
    </joint>

    <!-- IMU -->
    <link name="imu_link">
        <inertial>
            <mass value="${phidget_mass}"/>
            <xacro:box_inertia mass="${phidget_mass}" length="${phidget_length}" width="${phidget_width}" height="${phidget_height}"/>
        </inertial>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
            <box size="${phidget_length} ${phidget_width} ${phidget_height}"/>
            </geometry>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
            <box size="${phidget_length} ${phidget_width} ${phidget_height}"/>
            </geometry>
        </collision>
    </link>
    
    <joint name="base_link_to_imu_link" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="${imu_x_dist} ${imu_y_dist} ${imu_z_dist}" rpy="0 0 0"/>
    </joint>

    <!-- ZED Camera -->
    <!-- NOTE: this frame is for convenience, multicamera will use the subsequent left camera frames -->
    <link name="zed_camera_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${ZED_camera_width} ${ZED_camera_length} ${ZED_camera_height}"/>
            </geometry>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${ZED_camera_width} ${ZED_camera_length} ${ZED_camera_height}"/>
            </geometry>
        </collision>

        <inertial>
            <xacro:box_inertia mass="${ZED_camera_mass}" length="${ZED_camera_length}" width="${ZED_camera_width}" height="${ZED_camera_height}"/>
            <mass value="${ZED_camera_mass}"/>
        </inertial>
    </link>

    <joint name="zed_camera_joint" type="fixed">
        <parent link="stand_link"/>
        <child link="zed_camera_link"/>
        <origin xyz="${stand_length / 2.0 - ZED_camera_width} 0 ${ZED_camera_height / 2.0}" rpy="0 ${ZED_camera_pitch} 0"/>
    </joint>

    <!-- Generate Left Camera frame -->
    <!-- NOTE: specify frame of left camera (lens) because right one is specified relative to it by the multicamera plugin -->
    <!-- NOTE: we are assuming the lens are located at the edges of the camera (hence the use of 'camera_length' and not a 'stereo_offset') -->
    <link name="left_camera_link"/>

    <joint name="left_camera_link_joint" type="fixed">
        <parent link="zed_camera_link"/>
        <child link="left_camera_link"/>
        <origin xyz="0 ${ZED_camera_length / 2.0} 0" rpy="0 0 0"/>
    </joint>

    <!-- Generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames so that ros and opencv can operate on the camera frame correctly -->
    <link name="left_camera_link_optical"/>

    <joint name="left_camera_link_optical_joint" type="fixed">
        <parent link="left_camera_link"/>
        <child link="left_camera_link_optical"/>
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    </joint>

</robot>
