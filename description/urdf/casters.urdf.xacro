<?xml version="1.0"?>
<robot name="caster_wheels" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Includes -->
    <xacro:include filename="$(find description)/urdf/constants.xacro"/>
    <xacro:include filename="$(find description)/urdf/inertias.xacro"/>

    <!-- 
        ************************* HACK/FIX *************************
        Previously, we had spheres in sim that would allow
        our drive system to go over ramps, at the cost of a tilted 
        robot. A proposed hack/fix is to remove the front caster,
        making Caffeine a 3-wheel drive robot, and adding a
        counterweight at the back, representative of a battery, for 
        example.

        *Leave Front Caster+Wheel Definitions Commented Out*
    -->


    <!-- Front caster definition -->
    <link name="front_caster_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://description/urdf/meshes/front_caster.dae"/>
            </geometry>
        </visual>

        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://description/urdf/meshes/front_caster.dae"/>
            </geometry>
        </collision>

        <inertial>
            <mass value="${caster_link_mass}"/>
            <xacro:caster_link_inertia/>
        </inertial>
    </link>

    <joint name="front_caster_link_joint" type="continuous">
        <axis xyz="0 0 1"/>
        <parent link="chassis_link"/>
        <child link="front_caster_link"/>
        <origin rpy="0 0 0" xyz="${casters_separation / 2.0} 0 ${caster_vertical_offset}"/>
    </joint>

    <gazebo reference="front_caster_link">
        <mu1 value="0.3"/>
        <mu2 value="0.3"/>
        <kp value="10000000.0" />
        <kd value="1.0" />
    </gazebo>

    <!-- Front caster wheel definition -->
    <link name="front_caster_wheel">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://description/urdf/meshes/front_caster_wheel.dae"/>
            </geometry>
        </visual>

        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://description/urdf/meshes/front_caster_wheel.dae"/>
            </geometry>
        </collision>

        <inertial>
            <mass value="${caster_wheel_mass}"/>
            <xacro:caster_wheel_inertia/>
        </inertial>

    </link>

    <joint name="front_caster_wheel_joint" type="continuous">
        <parent link="front_caster_link"/>
        <child link="front_caster_wheel"/>
        <origin rpy="0 0 0" xyz="${caster_link_to_wheel_dist_x} 0 ${caster_link_to_wheel_dist_z}"/>
        <axis xyz="0 1 0"/>
    </joint>

    <gazebo reference="front_caster_wheel">
        <mu1 value="0.1"/>
        <mu2 value="0.1"/>
        <kp value="10000000.0" />
        <kd value="1.0" />
    </gazebo>

    <!-- Back caster definition -->
    <!-- <link name="back_caster_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://description/urdf/meshes/back_caster.dae"/>
            </geometry>
        </visual>

        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://description/urdf/meshes/back_caster.dae"/>
            </geometry>
        </collision>

        <inertial>
            <mass value="${caster_link_mass}"/>
            <xacro:caster_link_inertia/>
        </inertial>
    </link>

    <joint name="back_caster_link_joint" type="continuous">
        <axis xyz="0 0 1"/>
        <parent link="chassis_link"/>
        <child link="back_caster_link"/>
        <origin rpy="0 0 0" xyz="-${casters_separation / 2.0} 0 ${caster_vertical_offset}"/>
    </joint>

    <gazebo reference="back_caster_link">
        <mu1 value="0.3"/>
        <mu2 value="0.3"/>
        <kp value="10000000.0" />
        <kd value="1.0" />
    </gazebo> -->

    <!-- Back caster wheel definition -->
    <!-- <link name="back_caster_wheel">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://description/urdf/meshes/back_caster_wheel.dae"/>
            </geometry>
        </visual>

        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://description/urdf/meshes/back_caster_wheel.dae"/>
            </geometry>
        </collision>

        <inertial>
            <mass value="${caster_wheel_mass}"/>
            <xacro:caster_wheel_inertia/>
        </inertial>
    </link>
        
    <joint name="back_caster_wheel_joint" type="continuous">
        <parent link="back_caster_link"/>
        <child link="back_caster_wheel"/>
        <origin rpy="0 0 0" xyz="-${caster_link_to_wheel_dist_x} 0 ${caster_link_to_wheel_dist_z}"/>
        <axis xyz="0 1 0"/>
    </joint>

    <gazebo reference="back_caster_wheel">
        <mu1 value="0.1"/>
        <mu2 value="0.1"/>
        <kp value="10000000.0" />
        <kd value="1.0" />
    </gazebo> -->

</robot>
