<?xml version="1.0"?>
<robot name="caffeine_sim" xmlns:xacro="http://ros.org/wiki/xacro">
    
    <!-- Constants -->
    <xacro:include filename="$(find description)/urdf/constants.xacro"/>

    <!-- differential drive control support -->
    <gazebo>
        <plugin name="caffeine_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <robotNamespace>${robotNamespace}</robotNamespace>
            <updateRate>${diff_drive_update_rate}</updateRate>
            <leftJoint>${tf_prefix}/${wheel_left_joint}</leftJoint>
            <rightJoint>${tf_prefix}/${wheel_right_joint}</rightJoint>
            <wheelSeparation>${wheels_separation}</wheelSeparation>
            <wheelDiameter>${wheel_diameter}</wheelDiameter>
            <wheelAcceleration>${wheel_acceleration}</wheelAcceleration>
            <wheelTorque>${wheel_torque}</wheelTorque>
            <commandTopic>${diff_drive_commandTopic}</commandTopic>
            <odometryTopic>${diff_drive_odometryTopic}</odometryTopic>
            <odometryFrame>${diff_drive_odometryFrame}</odometryFrame>
            <robotBaseFrame>${diff_drive_robotBaseFrame}</robotBaseFrame>
            <odometrySource>${diff_drive_odometrySource}</odometrySource>
            <publishWheelTF>${diff_drive_publishWheelTF}</publishWheelTF>
            <publishOdomTF>${diff_drive_publishOdomTF}</publishOdomTF>
            <publishTf>${diff_drive_publishTf}</publishTf>
            <publishWheelJointState>${diff_drive_publishWheelJointState}</publishWheelJointState>
            <legacyMode>${diff_drive_legacymode}</legacyMode>
            <rosDebugLevel>${diff_drive_rosDebugLevel}</rosDebugLevel>
        </plugin>
    </gazebo>
    
    <!-- lets all the transmission tags be read -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>${robotNamespace}</robotNamespace>
        </plugin>
    </gazebo>

    <!-- LIDAR -->
    <gazebo reference="${tf_prefix}/base_laser">
        <sensor type="ray" name="gpu_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>${laser_visualize}</visualize>
            <update_rate>${laser_update_rate}</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>${laser_horizontal_samples}</samples>
                        <resolution>${laser_horizontal_resolution}</resolution>
                        <min_angle>${laser_horizontal_min_angle}</min_angle>
                        <max_angle>${laser_horizontal_max_angle}</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>${laser_range_min}</min>
                    <max>${laser_range_max}</max>
                    <resolution>${laser_range_resolution}</resolution>
                </range>
                <noise>
                    <type>${laser_noise_type}</type>
                    <!-- Noise based on gazebosim.org's tutorial on writing gazebo plugins w/ ROS. The comment they put will be reproduced:
                        Noise parameters based on published spec for Hokuyo laser achieving "+-10mm" accuracy at range < 10 m. A mean of 
                        0.0m and stddev of (0.01/3), will put 99.8% of samples within 0.03m of the true reading. -->
                    <mean>${laser_noise_mean}</mean>
                    <stddev>${laser_noise_stddev}</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <robotNamespace>${robotNamespace}</robotNamespace>
                <topicName>${laser_topicName}</topicName>
                <frameName>${laser_frameName}</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <!-- GPS -->
    <gazebo>
        <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
            <robotNamespace>${robotNamespace}</robotNamespace>
            <updateRate>5.0</updateRate>  <!-- 5 Hz -->
            <bodyName>${tf_prefix}/gps_link</bodyName>
            <frameId>${tf_prefix}/gps_link</frameId>
            <topicName>gps/fix</topicName>
            <velocityTopicName>gps/fix_velocity</velocityTopicName>
            <!-- Set reference GPS coordinates to UofT -->
            <referenceLatitude>43.6570</referenceLatitude>
            <referenceLongitude>-79.3903</referenceLongitude>
            <referenceAltitude>76</referenceAltitude>
            <!-- Model GPS behaviour -->
            <service>1</service> <!-- SERVICE_GPS = 1 -->
            <drift>1.5 1.5 1.5</drift> <!-- m -->
            <velocityDrift>0.05 0.05 0.05</velocityDrift> <!-- m/s-->
            <!-- TODO: add Gaussian noise based off Garmin GPS -->
        </plugin>
    </gazebo>
    
    <!-- Gazebo multicamera plugin -->
    <gazebo reference="${tf_prefix}/camera_link">
        <sensor type="multicamera" name="stereo_camera">
            <update_rate>${ZED_image_refresh}</update_rate>
            <camera name="left">
            <horizontal_fov>${ZED_image_hfov * (3.14/180)}</horizontal_fov>
            <image>
                <width>${ZED_image_width}</width>
                <height>${ZED_image_height}</height>
                <format>${ZED_image_format}</format>
            </image>
            <clip>
                <near>0.02</near>
                <far>300</far>
            </clip>
            </camera>
            <camera name="right">
            <pose>0 ${-ZED_camera_length} 0 0 0 0</pose>
            <horizontal_fov>${ZED_image_hfov * (3.14/180)}</horizontal_fov>
            <image>
                <width>${ZED_image_width}</width>
                <height>${ZED_image_height}</height>
                <format>${ZED_image_format}</format>
            </image>
            <clip>
                <near>0.02</near>
                <far>300</far>
            </clip>
            </camera>
            <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
                <cameraName>zed/zed_node</cameraName>
                <alwaysOn>true</alwaysOn>
                <updateRate>0</updateRate>
                <cameraName></cameraName>
                <imageTopicName>image_raw_color</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <depthImageTopicName>depth/image_raw</depthImageTopicName>
                <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
                <pointCloudTopicName>depth/points</pointCloudTopicName>
                <frameName>${tf_prefix}/zed_camera_link_optical</frameName>
                <hackBaseline>${ZED_camera_length}</hackBaseline>
                <!-- TODO: Get distortion parameters from real camera -->
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

</robot>

