<?xml version="1.0"?>
<robot name="caffeine_sim" xmlns:xacro="http://ros.org/wiki/xacro">
    
    <!-- Constants -->
    <xacro:include filename="$(find description)/urdf/constants.xacro"/>

    <!-- differential drive control support -->
    <!-- TODO: update parameters once they become known -->
    <gazebo>
        <plugin name="caffeine_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <robotNamespace>${robotNamespace}</robotNamespace>
            <updateRate>${diff_drive_update_rate}</updateRate>
            <leftJoint>${wheel_left_joint}</leftJoint>
            <rightJoint>${wheel_right_joint}</rightJoint>
            <wheelSeparation>${wheels_separation}</wheelSeparation>
            <wheelDiameter>${wheel_diameter}</wheelDiameter>
            <wheelAcceleration>${wheel_acceleration}</wheelAcceleration>
            <wheelTorque>${wheel_torque}</wheelTorque>
            <commandTopic>${diff_drive_commandTopic}</commandTopic>
            <odometryTopic>${diff_drive_odometryTopic}</odometryTopic>
            <odometryFrame>${diff_drive_odometryFrame}</odometryFrame>
            <robotBaseFrame>${diff_drive_robotBaseFrame}</robotBaseFrame>
            <odometrySource>${diff_drive_odometrySource}</odometrySource>
            <publishWheelTF>${diff_drive_publishWheelTF}</publishWheelTF>
            <publishOdomTF>${diff_drive_publishOdomTF}</publishOdomTF>
            <publishTf>${diff_drive_publishTf}</publishTf>
            <publishWheelJointState>${diff_drive_publishWheelJointState}</publishWheelJointState>
            <legacyMode>${diff_drive_legacymode"}</legacyMode>
            <rosDebugLevel>${diff_drive_rosDebugLevel}</rosDebugLevel>
        </plugin>
    </gazebo>
    
    <!-- lets all the transmission tags be read -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>${robotNamespace}</robotNamespace>
        </plugin>
    </gazebo>

    <!-- LIDAR plug-in -->
    <!-- TODO: Double check the numbers-->
   <gazebo reference="base_laser">
      <sensor type="ray" name="gpu_hokuyo_sensor">
         <pose>0 0 0 0 0 0</pose>
         <visualize>${laser_visualize}</visualize>
        <update_rate>${laser_update_rate}</update_rate>
         <ray>
            <scan>
               <horizontal>
                  <samples>${laser_horizontal_samples}</samples>
                  <resolution>${laser_horizontal_resolution}</resolution>
                  <min_angle>${laser_horizontal_min_angle}</min_angle>
                  <max_angle>${laser_horizontal_max_angle}</max_angle>
               </horizontal>
            </scan>
            <range>
               <min>${laser_range_min}</min>
               <max>${laser_range_max}</max>
               <resolution>${laser_range_resolution}</resolution>
            </range>
            <noise>
               <type>${laser_noise_type}</type>
               <!-- Noise based on gazebosim.org's tutorial on writing gazebo plugins w/ ROS. The comment they put will be reproduced:
                    Noise parameters based on published spec for Hokuyo laser achieving "+-30mm" accuracy at range < 10 m. A mean of 
                    0.0m and stddev of 0.01m will put 99.7% of samples within 0.03m of the true reading. -->
               <mean>${laser_noise_mean}</mean>
               <stddev>${laser_noise_stddev}</stddev>
            </noise>
         </ray>
         <plugin name="gazebo_ros_hokuyo_controller" filename="libgazebo_ros_laser.so">
            <topicName>${laser_topicName}</topicName>
            <frameName>${laser_frameName}</frameName>
         </plugin>
      </sensor>
   </gazebo>


</robot>

